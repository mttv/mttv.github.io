{"version":3,"sources":["components/Contacts.js"],"names":["Contacts","state","subject","input","valid","email","message","inputHandler","event","_this","setState","Object","C_xampp_htdocs_mttv_website_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","id","C_xampp_htdocs_mttv_website_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","value","setTimeout","formHandler","_this$state","length","$","removeAttr","css","display","test","sendHandler","_this$state2","params","data","FormData","append","JSON","stringify","fetch","serverUrl","method","body","then","r","json","console","log","withReactContent","Swal","fire","type","title","text","showCancelButton","catch","e","window","scrollTo","background","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","style","paddingTop","htmlFor","this","onChange","rows","cols","resize","onClick","Component"],"mappings":"0QAKqBA,6MAEjBC,MAAQ,CACJC,QAAS,CACLC,MAAO,GACPC,OAAO,GAEXC,MAAO,CACHF,MAAO,GACPC,OAAO,GAEXE,QAAS,CACLH,MAAO,GACPC,OAAO,MAafG,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAMK,OAAOC,GADlBH,OAAAI,EAAA,EAAAJ,CAAA,GAEWF,EAAKR,MAAMO,EAAMK,OAAOC,IAFnC,CAGQX,MAAOK,EAAMK,OAAOG,UAG5BC,WAAW,WACPR,EAAKS,eACN,QAGPA,YAAc,WAAM,IAAAC,EACoBV,EAAKR,MAAjCC,EADQiB,EACRjB,QAASG,EADDc,EACCd,MAAOC,EADRa,EACQb,QAEpBJ,EAAQC,MAAMiB,QAAU,GACxBX,EAAKC,SAAS,CACVR,QAAQS,OAAAI,EAAA,EAAAJ,CAAA,GACDF,EAAKR,MAAMC,QADX,CAEHE,OAAO,MAGfiB,IAAE,aAAaC,WAAW,WAE1Bb,EAAKC,SAAS,CACVR,QAAQS,OAAAI,EAAA,EAAAJ,CAAA,GACDF,EAAKR,MAAMC,QADX,CAEHE,OAAO,MAGfiB,IAAE,aAAaE,IAAI,CAACC,QAAW,WAhBf,kEAkBJC,KAAKpB,EAAMF,QACvBM,EAAKC,SAAS,CACVL,MAAMM,OAAAI,EAAA,EAAAJ,CAAA,GACCF,EAAKR,MAAMI,MADb,CAEDD,OAAO,MAGfiB,IAAE,cAAcC,WAAW,WAE3Bb,EAAKC,SAAS,CACVL,MAAMM,OAAAI,EAAA,EAAAJ,CAAA,GACCF,EAAKR,MAAMI,MADb,CAEDD,OAAO,MAGfiB,IAAE,cAAcE,IAAI,CAACC,QAAW,WAEhClB,EAAQH,MAAMiB,QAAU,IACxBX,EAAKC,SAAS,CACVJ,QAAQK,OAAAI,EAAA,EAAAJ,CAAA,GACDF,EAAKR,MAAMK,QADX,CAEHF,OAAO,MAGfiB,IAAE,YAAYC,WAAW,WAEzBb,EAAKC,SAAS,CACVJ,QAAQK,OAAAI,EAAA,EAAAJ,CAAA,GACDF,EAAKR,MAAMK,QADX,CAEHF,OAAO,MAGfiB,IAAE,YAAYE,IAAI,CAACC,QAAW,cAItCE,YAAc,WAAM,IAAAC,EACoBlB,EAAKR,MAAjCC,EADQyB,EACRzB,QAASG,EADDsB,EACCtB,MAAOC,EADRqB,EACQrB,QAExB,GADAG,EAAKS,cACDhB,EAAQE,OAASC,EAAMD,OAASE,EAAQF,MAAO,CAG/C,IACMwB,EAAS,CACX1B,QAASA,EAAQC,MACjBE,MAAOA,EAAMF,MACbG,QAASA,EAAQH,OAGf0B,EAAO,IAAIC,SACjBD,EAAKE,OAAO,UAAWC,KAAKC,UAAUL,IACtCM,MAAMC,+CAAyB,CAC3BC,OAAQ,OACRC,KAAMR,IACPS,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACVF,KAAK,SAAAC,GACFE,QAAQC,IAAIH,GACSI,IAAiBC,KACzBC,KAAK,CACdC,KAAM,UACNC,MAAO,2BACPC,KAAM,mDACNC,kBAAkB,MAEvBC,MAAM,SAAAC,GACLV,QAAQC,IAAIS,GACOR,IAAiBC,KACzBC,KAAK,CACZC,KAAM,QACNC,MAAO,oDACPC,KAAM,yBACNC,kBAAkB,2FA/GlCG,OAAOC,SAAS,EAAG,GACnBhC,IAAE,aAAaE,IAAI,CAAC+B,WAAc,6EAIlCjC,IAAE,aAAaC,WAAW,0CAkH1B,OACIiC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAACC,WAAY,SAC3CL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,WAEIH,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,WAAf,0BACAN,EAAAC,EAAAC,cAAA,SAAOX,KAAK,OAAOY,UAAU,eAAe5C,GAAG,UAAUE,MAAO8C,KAAK7D,MAAMC,QAAQC,MAAO4D,SAAUD,KAAKvD,eACzGgD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmB5C,GAAG,YAArC,+CAEJyC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,iBACAN,EAAAC,EAAAC,cAAA,SAAOX,KAAK,QAAQY,UAAU,eAAe5C,GAAG,QAAQE,MAAO8C,KAAK7D,MAAMI,MAAMF,MAAO4D,SAAUD,KAAKvD,eACtGgD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmB5C,GAAG,aAArC,wBAEJyC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,WAAf,gBACAN,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAe5C,GAAG,UAAUkD,KAAK,IAAIC,KAAK,IAAKN,MAAO,CAACO,OAAQ,QAASlD,MAAO8C,KAAK7D,MAAMK,QAAQH,MAAO4D,SAAUD,KAAKvD,eAC5IgD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmB5C,GAAG,WAArC,+BAEJyC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAA2BS,QAASL,KAAKpC,aAA3D,iBA/JkB0C","file":"static/js/6.a58fb886.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Swal from 'sweetalert2/dist/sweetalert2.all.min.js'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport $ from 'jquery'\r\n\r\nexport default class Contacts extends Component {\r\n\r\n    state = {\r\n        subject: {\r\n            input: \"\",\r\n            valid: false\r\n        },\r\n        email: {\r\n            input: \"\",\r\n            valid: false\r\n        },\r\n        message: {\r\n            input: \"\",\r\n            valid: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        $(\"#main-nav\").css({\"background\": \"rgba(134, 153, 223, 0.85)\"})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        $(\"#main-nav\").removeAttr(\"style\")\r\n    }\r\n\r\n    inputHandler = (event) => {\r\n        this.setState({\r\n            [event.target.id]: {\r\n                ...this.state[event.target.id],\r\n                input: event.target.value\r\n            }\r\n        })\r\n        setTimeout(() => {\r\n            this.formHandler()\r\n        }, 500)\r\n    }\r\n\r\n    formHandler = () => {\r\n        const { subject, email, message } = this.state\r\n        const emailFilter = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/\r\n        if (subject.input.length >= 5) {\r\n            this.setState({\r\n                subject: {\r\n                    ...this.state.subject,\r\n                    valid: true\r\n                }\r\n            })\r\n            $(\"#subj-err\").removeAttr(\"style\")\r\n        } else {\r\n            this.setState({\r\n                subject: {\r\n                    ...this.state.subject,\r\n                    valid: false\r\n                }\r\n            })\r\n            $(\"#subj-err\").css({\"display\": \"block\"})\r\n        }\r\n        if (emailFilter.test(email.input)) {\r\n            this.setState({\r\n                email: {\r\n                    ...this.state.email,\r\n                    valid: true\r\n                }\r\n            })\r\n            $(\"#email-err\").removeAttr(\"style\")\r\n        } else {\r\n            this.setState({\r\n                email: {\r\n                    ...this.state.email,\r\n                    valid: false\r\n                }\r\n            })\r\n            $(\"#email-err\").css({\"display\": \"block\"})\r\n        }\r\n        if (message.input.length >= 20) {\r\n            this.setState({\r\n                message: {\r\n                    ...this.state.message,\r\n                    valid: true\r\n                }\r\n            })\r\n            $(\"#msg-err\").removeAttr(\"style\")\r\n        } else {\r\n            this.setState({\r\n                message: {\r\n                    ...this.state.message,\r\n                    valid: false\r\n                }\r\n            })\r\n            $(\"#msg-err\").css({\"display\": \"block\"})\r\n        }\r\n    }\r\n\r\n    sendHandler = () => {\r\n        const { subject, email, message } = this.state\r\n        this.formHandler()\r\n        if (subject.valid && email.valid && message.valid) {\r\n            //http://localhost/mttv-website/php/\r\n            //https://mttv-web-app.herokuapp.com/\r\n            const serverUrl = \"https://mttv-web-app.herokuapp.com/\"\r\n            const params = {\r\n                subject: subject.input,\r\n                email: email.input,\r\n                message: message.input\r\n            }\r\n\r\n            const data = new FormData()\r\n            data.append(\"content\", JSON.stringify(params))\r\n            fetch(serverUrl + \"send-mail\", {\r\n                method: \"POST\",\r\n                body: data\r\n            }).then(r => r.json())\r\n                .then(r => {\r\n                    console.log(r)\r\n                    const SuccessAlert = withReactContent(Swal)\r\n                    SuccessAlert.fire({\r\n                        type: \"success\",\r\n                        title: 'Thanks for your message!',\r\n                        text: 'We will reply to your message as soon as we can.',\r\n                        showCancelButton: false\r\n                    })\r\n                }).catch(e => {\r\n                    console.log(e)\r\n                    const ErrorAlert = withReactContent(Swal)\r\n                    ErrorAlert.fire({\r\n                        type: \"error\",\r\n                        title: \"Oops!An error occurred while sending the message.\",\r\n                        text: 'Please try again later',\r\n                        showCancelButton: false\r\n                    })\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\" style={{paddingTop: \"50px\"}}>\r\n                <div className=\"heading\">\r\n                    Contacts\r\n                    <hr />\r\n                </div>\r\n                <div className=\"contact-form\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"subject\">Subject of the message</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"subject\" value={this.state.subject.input} onChange={this.inputHandler} />\r\n                        <div className=\"invalid-feedback\" id=\"subj-err\">Please specify the subject of the message.</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Contact email</label>\r\n                        <input type=\"email\" className=\"form-control\" id=\"email\" value={this.state.email.input} onChange={this.inputHandler} />\r\n                        <div className=\"invalid-feedback\" id=\"email-err\">Email is not valid.</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"message\">Your message</label>\r\n                        <textarea className=\"form-control\" id=\"message\" rows=\"3\" cols=\"3\"  style={{resize: \"none\"}} value={this.state.message.input} onChange={this.inputHandler} />\r\n                        <div className=\"invalid-feedback\" id=\"msg-err\">Please enter your message.</div>\r\n                    </div>\r\n                    <button className=\"btn btn-primary btn-send\" onClick={this.sendHandler}>Send</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"],"sourceRoot":""}