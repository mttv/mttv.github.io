{"version":3,"sources":["components/Demo/SideBar.js","components/Demo/Card.js","components/Demo/DraggablePlayer.js","components/Demo/MultiStream.js"],"names":["sideBar","props","react_default","a","createElement","id","className","onChange","searchHandler","value","query","type","placeholder","streams","list","total","totalFollowing","streamsListLayout","streamPreviewCard","react_beautiful_dnd_esm","draggableId","res","_id","index","provided","snapshot","Object","assign","ref","innerRef","draggableProps","dragHandleProps","src","channel","profile_banner","alt","logo","display_name","game","status","DraggablePLayer","styleClass","ReactPlayer_default","width","height","url","playing","muted","timeout","MultiStream","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","searchQuery","target","setState","clearTimeout","setTimeout","getStreamsHandler","ActiveStreamsHandler","darkChat","darkMode","localStorage","getItem","ShowStreams","firstStream","others","streamUrl","chatUrl","length","style","margin","DraggablePlayer","stream","name","state","volume","marginBottom","title","scrolling","frameborder","slice","map","i","key","streams_1","streams_2","limit","showLimit","objectSpread","api","search","err","error","undefined","_total","withReactContent","Swal","fire","text","showCancelButton","_this$state$streams","role","droppableId","droppableProps","Card","onDragStart","activeStreams","$","removeClass","fadeOut","addClass","onDragEnd","destination","source","fadeIn","channelId","streamId","channelID","prevState","concat","toConsumableArray","on","toggleClass","Link","to","SideBar","Component"],"mappings":"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","file":"static/js/3.6267890a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst sideBar = (props) => {\r\n  return(\r\n        <nav id=\"sidebar\">\r\n            <div className=\"sidebar-header\">\r\n                <input onChange={props.searchHandler} value={props.query} type=\"text\" id=\"search-input\" className=\"form-control\" placeholder=\"search...\" />\r\n                <hr />\r\n            </div>\r\n            <div className=\"streams-list\">\r\n                <div className=\"result-counter d-flex justify-content-center\">\r\n                    {props.streams.list ? <span className=\"badge total\">{props.streams.total}</span> : <span className=\"badge total\">{props.totalFollowing}</span>}\r\n                </div>\r\n                <props.streamsListLayout />\r\n            </div>\r\n        </nav>\r\n  )\r\n}\r\n\r\nexport default sideBar","import React from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\n\r\nconst streamPreviewCard = (props) => {\r\n    return(\r\n        <Draggable draggableId={props.res._id} index={props.index} id={props.res._id}>\r\n            {(provided, snapshot) => (\r\n                <li className=\"list-group-item channel-card\" id={props.res._id}\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                >\r\n                    <div className=\"overlay\">\r\n                        <div className=\"bg-img\">\r\n                            <img src={props.res.channel.profile_banner} alt=\"\" />\r\n                        </div>\r\n                        <img className=\"avatar\" src={props.res.channel.logo} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <h6>{props.res.channel.display_name}<br/><small>{props.res.game}</small></h6>\r\n                        <p>{props.res.channel.status}</p>\r\n                    </div>\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default streamPreviewCard","import React from 'react'\r\nimport ReactPlayer from 'react-player'\r\n\r\nconst DraggablePLayer = (props) => {\r\n    return(\r\n        <div className={\"player-container container-block embed-responsive embed-responsive-16by9 \" + props.styleClass}>\r\n            <ReactPlayer width=\"100%\" height=\"100%\" className=\"react-player\" url={props.url} playing={props.playing} muted={true} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DraggablePLayer","import React, { Component } from 'react'\r\nimport $ from 'jquery'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport { Link } from 'react-router-dom'\r\nimport SideBar from './SideBar'\r\nimport Card from './Card'\r\nimport DraggablePlayer from './DraggablePlayer'\r\n\r\nlet timeout = null\r\n\r\nexport default class MultiStream extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            searchQuery: \"\",\r\n            playing: true,\r\n            volume: 0,\r\n            muted: true,\r\n            activeStreams: [],\r\n            streams: {\r\n                list: null,\r\n                error: false,\r\n                total: 0,\r\n                showLimit: 12\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(\"#main-nav\").fadeOut()\r\n        $(\"#footer\").fadeOut()\r\n        $(\"#open-search-bar\").on(\"click\", function () {\r\n            $(\"#sidebar\").toggleClass(\"active\")\r\n            $(\".stream-search-btn\").toggleClass(\"active\")\r\n            $(\".stream-search-btn .search-icon\").toggleClass(\"hide\")\r\n            $(\".stream-search-btn .close-icon\").toggleClass(\"active\")\r\n        })\r\n        if (this.state.activeStreams.length === 0) {\r\n            $(\".drop-container\").removeClass(\"hidden\")\r\n            $(\"#streams-container\").fadeOut()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        $(\"#main-nav\").fadeIn()\r\n        $(\"#footer\").fadeIn()\r\n    }\r\n\r\n    searchHandler = (event) => {\r\n        let searchQuery = event.target.value\r\n        this.setState({\r\n            searchQuery: searchQuery\r\n        })\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(() => {\r\n            this.getStreamsHandler(searchQuery, 12)\r\n        }, 1000)\r\n    }\r\n\r\n    ActiveStreamsHandler = (props) => {\r\n        const { streams } = props\r\n        const darkMode = localStorage.getItem(\"darkMode\")\r\n        let darkChat\r\n        darkMode ? darkChat = \"?darkpopout\" :  darkChat = \"\"\r\n        const streamUrl = \"https://www.twitch.tv/\"\r\n        let chatUrl = \"https://www.twitch.tv/embed/\"\r\n        const countStreams = streams.length\r\n        let ShowStreams\r\n        let firstStream\r\n        let others\r\n        switch (countStreams) {\r\n            case 1: \r\n                ShowStreams = () => {\r\n                    return(\r\n                        <div className=\"container-fluid\" style={{margin: \"0 auto\", width: \"85%\"}}>\r\n                            <div className=\"row\" style={{width: \"100%\"}}>\r\n                                <div className=\"col-8\">\r\n                                    <DraggablePlayer \r\n                                        url={streamUrl + streams[0].stream.channel.name} \r\n                                        playing={this.state.playing} \r\n                                        volume={this.state.volume}\r\n                                        muted={this.state.muted} \r\n                                />\r\n                                </div>\r\n                                <div className=\"col-4\" style={{marginBottom: \"20px\"}}>\r\n                                    <div className=\"container-block\" style={{height: \"100%\"}}>\r\n                                        <iframe \r\n                                            style={{width: \"100%\", height: \"100%\"}}\r\n                                            src={chatUrl + streams[0].stream.channel.name + \"/chat\"  + darkChat} \r\n                                            title={streams[0].stream.channel.name} \r\n                                            scrolling=\"yes\"\r\n                                            frameborder=\"0\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                break\r\n            case 2: ShowStreams = () => {\r\n                return(\r\n                    <div className=\"container-fluid\" style={{margin: \"0 auto\", width: \"75%\"}}>\r\n                        <div className=\"row\" style={{width: \"100%\"}}>\r\n                            <div className=\"col-8\">\r\n                                <DraggablePlayer \r\n                                    url={streamUrl + streams[0].stream.channel.name} \r\n                                    playing={this.state.playing} \r\n                                    volume={this.state.volume}\r\n                                    muted={this.state.muted} \r\n                                />\r\n                            </div>\r\n                            <div className=\"col-4\" style={{marginBottom: \"20px\"}}>\r\n                                <div className=\"container-block\" style={{height: \"100%\"}}>\r\n                                    <iframe style={{width: \"100%\", height: \"100%\"}}\r\n                                        src={chatUrl + streams[0].stream.channel.name + \"/chat\"  + darkChat} title={streams[0].stream.channel.name} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" style={{width: \"100%\"}}>\r\n                            <div className=\"col-8\">\r\n                                <DraggablePlayer \r\n                                    url={streamUrl + streams[1].stream.channel.name} \r\n                                    playing={this.state.playing} \r\n                                    volume={this.state.volume}\r\n                                    muted={this.state.muted} \r\n                                />\r\n                            </div>\r\n                            <div className=\"col-4\" style={{marginBottom: \"20px\"}}>\r\n                                <div className=\"container-block\" style={{height: \"100%\"}}>\r\n                                    <iframe \r\n                                        style={{width: \"100%\", height: \"100%\"}}\r\n                                        src={chatUrl + streams[1].stream.channel.name + \"/chat\"  + darkChat} \r\n                                        title={streams[1].stream.channel.name}\r\n                                        scrolling=\"yes\"\r\n                                        frameborder=\"0\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n                break\r\n            case 3:\r\n                firstStream = streams.slice(0, 1)\r\n                others = streams.slice(1, 3)\r\n                others = others.map((res, i) => {\r\n                    return (\r\n                        <DraggablePlayer\r\n                            key={i} \r\n                            styleClass={\"col\"} \r\n                            url={streamUrl + res.stream.channel.name} \r\n                            playing={this.state.playing} \r\n                        />\r\n                    )\r\n                })\r\n                ShowStreams = () => {\r\n                    return(\r\n                        <div className=\"containe-fluid\" style={{margin: \"0 auto\", width: \"80%\"}}>\r\n                            <div className=\"row\" style={{width: \"100%\"}}>\r\n                                <div className=\"col-8\">\r\n                                    <DraggablePlayer\r\n                                        url={streamUrl + firstStream[0].stream.channel.name} \r\n                                        playing={this.state.playing} \r\n                                        volume={this.state.volume}\r\n                                        muted={this.state.muted}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-4\" style={{marginBottom: \"20px\"}}>\r\n                                    <div className=\"container-block\" style={{height: \"100%\"}}>\r\n                                        <iframe \r\n                                            style={{width: \"100%\", height: \"100%\"}}\r\n                                            src={chatUrl + streams[0].stream.channel.name + \"/chat\"  + darkChat} \r\n                                            title={streams[0].stream.channel.name}\r\n                                            scrolling=\"yes\"\r\n                                            frameborder=\"0\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {others}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                break\r\n            case 4:\r\n                let streams_1 = streams.slice(0, 2)\r\n                let streams_2 = streams.slice(2, 4)\r\n                streams_1 = streams_1.map((res, i) => {\r\n                    return (\r\n                        <DraggablePlayer\r\n                            key={i} \r\n                            styleClass={\"col\"} \r\n                            url={streamUrl + res.stream.channel.name} \r\n                            playing={this.state.playing} \r\n                        />\r\n                    )\r\n                })\r\n                streams_2 = streams_2.map((res, i) => {\r\n                    return (\r\n                        <DraggablePlayer\r\n                            key={i} \r\n                            styleClass={\"col\"} \r\n                            url={streamUrl + res.stream.channel.name} \r\n                            playing={this.state.playing} \r\n                        />\r\n                    )\r\n                })\r\n                ShowStreams = () => {\r\n                    return(\r\n                        <div className=\"container-fluid\" style={{margin: \"0 auto\", width: \"86%\"}}>\r\n                            <div className=\"row\" style={{width: \"100%\"}}>\r\n                                {streams_1}\r\n                            </div>\r\n                            <div className=\"row\" style={{width: \"100%\"}}>\r\n                                {streams_2}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                break\r\n            default: ShowStreams = () => { return <div /> }\r\n                break\r\n        }\r\n        return (\r\n            <div id=\"streams-container\">\r\n                <ShowStreams />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getStreamsHandler = (query, limit) => {\r\n        if(limit <= 100) {\r\n            if (this.state.streams.showLimit !== limit) {\r\n                this.setState({\r\n                    streams: {\r\n                        ...this.state.streams,\r\n                        showLimit: limit\r\n                    }\r\n                }) \r\n            }\r\n            this.props.api.search.streams({limit: limit, query: query}, (err, res) => {\r\n                if (err) {\r\n                    this.setState({\r\n                        streams: {\r\n                            ...this.state.streams,\r\n                            error: err\r\n                        }\r\n                    })\r\n                } else {\r\n                    if (res.streams.length === 0 || res.streams.length === undefined) {\r\n                        this.setState({\r\n                            streams: {\r\n                                ...this.state.streams,\r\n                                list: \"empty\"\r\n                            }\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            streams: {\r\n                                ...this.state.streams,\r\n                                total: res._total\r\n                            }\r\n                        })\r\n                        this.setState({\r\n                            streams: {\r\n                                ...this.state.streams,\r\n                                list: res.streams\r\n                            }\r\n                        })\r\n                        this.setState({\r\n                            streams: {\r\n                                ...this.state.streams,\r\n                                error: false\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        } else {\r\n            const Alert = withReactContent(Swal)\r\n            Alert.fire({\r\n                type: 'warning',\r\n                title: 'Looks like you\\'ve reached the bottom!',\r\n                text: 'You have reached the limit of available streams',\r\n                showCancelButton: false\r\n            })\r\n        }\r\n    }\r\n\r\n    streamsListLayout = () => {\r\n        const { list, error } = this.state.streams\r\n        if (list === null) {\r\n            return(\r\n                <div className=\"row\" id=\"streams-list\"></div>\r\n            )\r\n        } else if (error) {\r\n            return(\r\n                    <div className=\"alert alert-primary alert-error\" role=\"alert\">\r\n                        <i className=\"fas fa-exclamation alert-icon\"></i>\r\n                        <p>{error}</p>\r\n                    </div>\r\n            )\r\n        } else if (list === \"empty\") {\r\n            return(\r\n                    <div className=\"alert alert-primary alert-error\" role=\"alert\">\r\n                        <i className=\"fas fa-exclamation alert-icon\"></i>\r\n                        <p>Looks like there is no streams</p>\r\n                    </div>\r\n            )\r\n        } else if (list !== null) {\r\n            return(\r\n                <Droppable droppableId=\"search-container\">\r\n                    {(provided, snapshot) => (\r\n                        <ul className=\"list-group\"\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                        >\r\n                            {list.map((res, i) => <Card key={i} res={res} index={i} />)}\r\n                            {provided.placeholder}\r\n                        </ul>\r\n                    )}\r\n                </Droppable>\r\n            )\r\n        } else {\r\n            return(\r\n                <div className=\"row\" id=\"streams-list\" />\r\n            )\r\n        }\r\n    }\r\n\r\n    onDragStart = () => {\r\n        if (this.state.activeStreams.length >= 0 && this.state.activeStreams.length !== 4) {\r\n            $(\".drop-container\").removeClass(\"hidden\")\r\n            $(\"#streams-container\").fadeOut()\r\n            $(\"#streams-container\").addClass(\"hidden\")\r\n        }\r\n    }\r\n\r\n    onDragEnd = (res) => {\r\n        const { destination, source } = res\r\n        const activeStreams = this.state.activeStreams\r\n        if (!destination || destination.droppableId === \"search-container\") {\r\n            if (activeStreams.length !== 0) {\r\n                $(\".drop-container\").addClass(\"hidden\")\r\n                $(\"#streams-container\").fadeIn()\r\n                $(\"#streams-container\").removeClass(\"hidden\")\r\n            }\r\n        } else if(destination.droppableId === \"drop-container\") {\r\n            if (activeStreams.length === 4) {\r\n                if (activeStreams.length !== 0) {\r\n                    $(\".drop-container\").addClass(\"hidden\")\r\n                    $(\"#streams-container\").fadeIn()\r\n                    $(\"#streams-container\").removeClass(\"hidden\")\r\n                }\r\n            } else {\r\n                const channelId = this.state.streams.list[source.index].channel._id\r\n                const streamId = this.state.streams.list[source.index]._id\r\n                this.props.api.streams.channel({channelID: channelId }, (err, res) => {\r\n                    if (err) {\r\n                        // console.log(err)\r\n                    } else {\r\n                        this.setState(prevState =>({\r\n                            activeStreams: [...prevState.activeStreams, res]\r\n                        }))\r\n                        $(\"#\" + streamId).fadeOut()\r\n                        $(\".drop-container\").addClass(\"hidden\")\r\n                        $(\"#streams-container\").fadeIn()\r\n                        $(\"#streams-container\").removeClass(\"hidden\")\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <DragDropContext\r\n                onDragStart={this.onDragStart}\r\n                onDragEnd={this.onDragEnd}\r\n            >\r\n                <div className=\"multistream-container\">\r\n                    <div className=\"mobile-alert\">\r\n                        <h4>Demo is not available on mobile devices. Please switch to desktop browser</h4>\r\n                    </div>\r\n                    <Link to=\"/\" className=\"exit-demo-btn btn\">Exit</Link>\r\n                    <SideBar \r\n                        streamsListLayout={this.streamsListLayout} \r\n                        streams={this.state.streams} query={this.state.searchQuery} \r\n                        searchHandler={this.searchHandler}\r\n                        searchQuery={this.state.searchQuery}\r\n                    />\r\n                    <div id=\"open-search-bar\" className=\"btn stream-search-btn\"><i className=\"fas fa-search search-icon\"></i><i className=\"fas fa-chevron-right close-icon\"></i></div>\r\n                    <this.ActiveStreamsHandler streams={this.state.activeStreams} />\r\n                    <div className=\"drop-container hidden\">\r\n                        <div className=\"jumbotron\">\r\n                            <Droppable droppableId=\"drop-container\">\r\n                                {(provided, snapshot) => (\r\n                                    <div id=\"drop-container\" style={{width: \"100%\", height: \"100%\"}} ref={provided.innerRef} {...provided.droppableProps}>\r\n                                        <i className=\"fas fa-arrow-circle-down drop-icon\"></i>\r\n                                        <h4>Select stream and drag it over here.</h4>\r\n                                        {provided.placeholder}\r\n                                    </div> \r\n                                )}\r\n                            </Droppable>\r\n                        </div>    \r\n                    </div>\r\n                </div>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}